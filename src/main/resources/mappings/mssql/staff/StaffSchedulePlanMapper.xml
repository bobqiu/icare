<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.sjtu.icare.modules.staff.persistence.StaffSchedulePlanDAO">
    
   
    <cache />
    
    <sql id='fields'>
        T_STAFF_SCHEDULE_PLAN.id,
        T_STAFF_SCHEDULE_PLAN.staff_id,
        T_STAFF_SCHEDULE_PLAN.gero_id,
        T_STAFF_SCHEDULE_PLAN.work_date
    </sql>

    <resultMap id="StaffSchedulePlanMap" type="com.sjtu.icare.modules.staff.entity.StaffSchedulePlanEntity">
        <id property="id" column="id" />
        <result property="staffId" column="staff_id" />
        <result property="geroId" column="gero_id" />
        <result property="workDate" column="work_date" />
    </resultMap>
    
    <select id="getStaffSchedulePlans" parameterType="Map" resultMap="StaffSchedulePlanMap">

        SELECT
            *
        FROM 
            T_STAFF_SCHEDULE_PLAN
        WHERE 
            T_STAFF_SCHEDULE_PLAN.staff_id = #{staffId}
            <if test="startDate != null">
                <![CDATA[
                and #{startDate} <= convert(nvarchar(23), T_STAFF_SCHEDULE_PLAN.work_date, 120)
                ]]>
            </if>
            <if test="endDate != null">
                <![CDATA[
                and #{endDate} >= convert(nvarchar(23), T_STAFF_SCHEDULE_PLAN.work_date, 120)
                ]]>
            </if>

    </select>
    
    <select id="getStaffSchedulePlan" resultMap="StaffSchedulePlanMap">

        SELECT
            T_STAFF_SCHEDULE_PLAN.*
        FROM 
            T_STAFF_SCHEDULE_PLAN
        WHERE 
            T_STAFF_SCHEDULE_PLAN.staff_id = #{staffId}
            AND T_STAFF_SCHEDULE_PLAN.work_date = #{workDate}

    </select>
    
    <select id="getAllStaffSchedulePlansByGeroId" parameterType="Map" resultMap="StaffSchedulePlanMap">

        SELECT
            *
        FROM 
            T_STAFF_SCHEDULE_PLAN
        WHERE 
            T_STAFF_SCHEDULE_PLAN.gero_id = #{geroId}
            <if test="startDate != null">
                <![CDATA[
                and #{startDate} <= convert(nvarchar(23), T_STAFF_SCHEDULE_PLAN.work_date, 120)
                ]]>
            </if>
            <if test="endDate != null">
                <![CDATA[
                and #{endDate} >= convert(nvarchar(23), T_STAFF_SCHEDULE_PLAN.work_date, 120)
                ]]>
            </if>

    </select>
    
    <select id="getAllStaffSchedulePlansByGeroIdAndRole" resultMap="StaffSchedulePlanMap">

		select 
		  <include refid='fields'/>
		from 
		<!-- 先连 user 和 staff schedule plan， 再连 user roles 和 role 相连的结果 -->
		(
		    T_USER inner join T_STAFF_SCHEDULE_PLAN 
		    on T_USER.user_type = #{userType}
		    and T_USER.user_id = T_STAFF_SCHEDULE_PLAN.staff_id
		    and T_STAFF_SCHEDULE_PLAN.gero_id = #{geroId}
		        <if test="startDate != null">
		            <![CDATA[
		            and #{startDate} <= convert(nvarchar(23), T_STAFF_SCHEDULE_PLAN.work_date, 120)
		            ]]>
		        </if>
		        <if test="endDate != null">
		            <![CDATA[
		            and #{endDate} >= convert(nvarchar(23), T_STAFF_SCHEDULE_PLAN.work_date, 120)
		            ]]>
		        </if>
		) inner join (
		
		    T_USER_ROLES inner join T_ROLE
		    on 
		        T_USER_ROLES.role_id = T_ROLE.id
		        and T_ROLE.name = #{role}
		) on T_USER_ROLES.user_id = T_USER.id

    </select>
      
    <insert id="insertStaffSchedulePlans">
        insert into 
            T_STAFF_SCHEDULE_PLAN(staff_id, gero_id, work_date) 
        values
	            <foreach collection="workDate" item="item" index="index" separator="," >
	            (#{staffId}, #{geroId}, #{item})
	            </foreach>
    </insert>

    <delete id="deleteStaffSchedulePlans">
        delete from
            T_STAFF_SCHEDULE_PLAN
        where
            T_STAFF_SCHEDULE_PLAN.staff_id = #{staffId} 
            and T_STAFF_SCHEDULE_PLAN.work_date in
            <foreach collection="noworkDate" item="item" index="index" separator="," open="(" close=")">
            #{item}
            </foreach>
    </delete>
    
</mapper>